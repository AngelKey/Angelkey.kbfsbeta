
@namespace("keybase.1")
protocol config {

  import idl "common.avdl";

  record GetCurrentStatusRes {
    boolean configured;
    boolean registered;
    boolean loggedIn;
    union { null, User } user;
  }

  GetCurrentStatusRes getCurrentStatus(int sessionID);

  enum ForkType {
    NONE_0,
    AUTO_1,
    WATCHDOG_2
  }

  record Config {
    string serverURI;
    string socketFile;
    string label;
    string runMode;
    boolean gpgExists;
    string gpgPath;
    string version;
    string path;
    string configPath;
    string versionShort;
    string versionFull;
    boolean isAutoForked;
    ForkType forkType;
  }

  Config getConfig(int sessionID);

  /**
    Change user config.
    For example, to update primary picture source:
      key=picture.source, value=twitter (or github)
    */
  void setUserConfig(int sessionID, string username, string key, string value);

  /**
    Install status describes state of install for a component or service.
    */
  enum InstallStatus {
    UNKNOWN_0,
    ERROR_1,
    NOT_INSTALLED_2,
    NEEDS_UPGRADE_3,
    INSTALLED_4
  }

  enum InstallAction {
    UNKNOWN_0,
    NONE_1, // Nothing to do
    UPGRADE_2, // Upgrade from earlier version
    REINSTALL_3, // Something bad happened and need re-install
    INSTALL_4 // Installing (not installed)
  }

  record ServiceStatus {
    string version;
    string label;
    string pid;
    string lastExitStatus;
    string bundleVersion;
    InstallStatus installStatus;
    InstallAction installAction;
    Status status;
  }

  record ServicesStatus {
    array<ServiceStatus> service;
    array<ServiceStatus> kbfs;
  }

  record FuseMountInfo {
    string path;
    string fstype;
    string output; // Output from mount, may be platform specific
  }

  record FuseStatus {
    string version;
    string bundleVersion;
    string kextID;
    string path;
    boolean kextStarted;
    InstallStatus installStatus;
    InstallAction installAction;
    array<FuseMountInfo> mountInfos;
    Status status;
  }

  record InstallComponent {
    string name;
    Status status;
  }
}
